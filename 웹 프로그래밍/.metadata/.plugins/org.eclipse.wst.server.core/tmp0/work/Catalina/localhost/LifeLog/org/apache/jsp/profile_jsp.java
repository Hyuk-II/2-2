/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.95
 * Generated at: 2024-12-16 13:46:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import javax.servlet.http.*;
import javax.servlet.*;

public final class profile_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(6);
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("    <meta charset=\"UTF-8\">\n");
      out.write("    <link rel=\"icon\" href=\"./images/Logo.png\">\n");
      out.write("    <title>Life Log</title>\n");
      out.write("    <style>\n");
      out.write("        body {\n");
      out.write("            font-family: Arial, sans-serif;\n");
      out.write("            background-color: #1e1e1e;\n");
      out.write("            color: white;\n");
      out.write("            margin: 0;\n");
      out.write("            padding: 0;\n");
      out.write("            display: flex;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .container {\n");
      out.write("            display: flex;\n");
      out.write("            height: 100vh;\n");
      out.write("            width: 100%;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .menu-bar {\n");
      out.write("			width : 200px;\n");
      out.write("        	background-color: #274a8f;\n");
      out.write("        	display: flex;\n");
      out.write("        	flex-direction: column;\n");
      out.write("        	align-items: center;\n");
      out.write("        	padding: 20px 10px;\n");
      out.write("        	gap: 20px;\n");
      out.write("		}\n");
      out.write("\n");
      out.write("        .menu-item {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            justify-content: center;\n");
      out.write("            padding: 15px;\n");
      out.write("            width: 80%;\n");
      out.write("            color: white;\n");
      out.write("            text-align: center;\n");
      out.write("            background-color: #274a8f;\n");
      out.write("            border-radius: 5px;\n");
      out.write("            cursor: pointer;\n");
      out.write("            transition: background-color 0.3s ease;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .menu-item:hover,\n");
      out.write("        .menu-item.active {\n");
      out.write("            background-color: #007bff;\n");
      out.write("        }\n");
      out.write("		\n");
      out.write("		.place-bottom{\n");
      out.write("      		bottom: 12px;\n");
      out.write("      		width: 160px;\n");
      out.write("      		position: absolute;\n");
      out.write("      	}\n");
      out.write("      	\n");
      out.write("        .logo-container {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            gap: 10px;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .logo {\n");
      out.write("            height: 50px;\n");
      out.write("            width: auto;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .logo-text {\n");
      out.write("            font-size: 24px;\n");
      out.write("            font-weight: bold;\n");
      out.write("            color: white;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .content {\n");
      out.write("            flex: 1;\n");
      out.write("            padding: 20px;\n");
      out.write("            padding-left: 40px;\n");
      out.write("            margin-top: 40px;\n");
      out.write("            overflow-y: auto;\n");
      out.write("            box-sizing: border-box;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .header {\n");
      out.write("            display: flex;\n");
      out.write("            align-items: center;\n");
      out.write("            margin-bottom: 20px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .header img {\n");
      out.write("            width: 40px;\n");
      out.write("            height: 40px;\n");
      out.write("            margin-right: 10px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .header h1 {\n");
      out.write("            text-align: left;\n");
      out.write("            color: white;\n");
      out.write("            margin: 0;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .content hr {\n");
      out.write("            height: 2px;\n");
      out.write("            width: 100%;\n");
      out.write("            border: none;\n");
      out.write("            background-color: #2D488B;\n");
      out.write("            margin-top: 0px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .info-table {\n");
      out.write("            width: 85%;\n");
      out.write("            border-collapse: collapse;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .info-table tr {\n");
      out.write("            border-bottom: 1px solid #444;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .info-table td {\n");
      out.write("            padding: 20px 20px;\n");
      out.write("            text-align: left;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .info-table td:first-child {\n");
      out.write("            width: 30%;\n");
      out.write("            color: #a0a0a5;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .button-container {\n");
      out.write("            display: flex;\n");
      out.write("            justify-content: center;\n");
      out.write("            gap: 20px;\n");
      out.write("            margin-top: 40px;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .button {\n");
      out.write("            background-color: #1e73e8;\n");
      out.write("            color: white;\n");
      out.write("            padding: 10px 20px;\n");
      out.write("            border: none;\n");
      out.write("            border-radius: 4px;\n");
      out.write("            cursor: pointer;\n");
      out.write("        }\n");
      out.write("\n");
      out.write("        .button:hover {\n");
      out.write("            background-color: #155bb5;\n");
      out.write("        }\n");
      out.write("    </style>\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("    ");


    String userEmail = (String) session.getAttribute("email");

    String url = "jdbc:mysql://localhost:3306/life_log_db?serverTimezone=UTC";
    String username = "lifelog_admin";
    String password = "q1w2e3r4";
    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet rs = null;

    String name = "", id = "", gender = "",  birthday = "", job = "", org = "";

    if (userEmail != null) {
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            conn = DriverManager.getConnection(url, username, password);

            String sql = "SELECT * FROM users WHERE id = ?";
            pstmt = conn.prepareStatement(sql);
            pstmt.setString(1, userEmail);
            rs = pstmt.executeQuery();

            if (rs.next()) {
                name = rs.getString("name");
                id = rs.getString("id");
                gender = rs.getString("gender").equals("MALE") ? "남성" : "여성";
                birthday = rs.getString("birthday");
                job = rs.getString("job");
                org = rs.getString("org");
            }
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            if (rs != null) try { rs.close(); } catch (SQLException e) {}
            if (pstmt != null) try { pstmt.close(); } catch (SQLException e) {}
            if (conn != null) try { conn.close(); } catch (SQLException e) {}
        }
    } else {
        response.sendRedirect("SignIn.jsp");
    }
    
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"container\">\n");
      out.write("        <div class=\"menu-bar\">\n");
      out.write("            <div class=\"logo-container\"  onclick=\"location.href='main.jsp'\">\n");
      out.write("                <img src=\"./images/Logo.png\" alt=\"Logo\" class=\"logo\" />\n");
      out.write("                <div class=\"logo-text\">Life Log</div>\n");
      out.write("            </div>\n");
      out.write("            <div class=\"menu-item\" data-page=\"main\" onclick=\"location.href='main.jsp'\">메인</div>\n");
      out.write("            <div class=\"menu-item\" data-page=\"log-analysis\" onclick=\"location.href='log_analyze.jsp'\">로그 분석</div>\n");
      out.write("            <div class=\"menu-item\" data-page=\"log-record\" onclick=\"location.href='goal_set.jsp'\">로그 기록</div>\n");
      out.write("            <div class=\"menu-item\" data-page=\"diary\" onclick=\"location.href='diary.jsp'\">일기</div>\n");
      out.write("            <div class=\"menu-item place-bottom\" onclick=\"location.href='SignOut.jsp'\">로그아웃</div>\n");
      out.write("        </div>\n");
      out.write("\n");
      out.write("        <div class=\"content\">\n");
      out.write("            <div class=\"header\">\n");
      out.write("                <img src=\"");
      out.print( request.getContextPath() );
      out.write("/images/profile-icon.png\" alt=\"Profile Icon\">\n");
      out.write("                <h1>회원 정보</h1>\n");
      out.write("            </div>\n");
      out.write("            <hr>\n");
      out.write("            <table class=\"info-table\">\n");
      out.write("                <tr>\n");
      out.write("                    <td>이름</td>\n");
      out.write("                    <td>");
      out.print( name );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>아이디</td>\n");
      out.write("                    <td>");
      out.print( id );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>성별</td>\n");
      out.write("                    <td>");
      out.print( gender );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>생일</td>\n");
      out.write("                    <td>");
      out.print( birthday );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>직업</td>\n");
      out.write("                    <td>");
      out.print( job );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("                <tr>\n");
      out.write("                    <td>소속</td>\n");
      out.write("                    <td>");
      out.print( org );
      out.write("</td>\n");
      out.write("                </tr>\n");
      out.write("            </table>\n");
      out.write("            <div class=\"button-container\">\n");
      out.write("                <button class=\"button\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/edit_profile.jsp'\">수정</button>\n");
      out.write("                <button class=\"button\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/change_pwd.jsp'\">비밀번호 변경</button>\n");
      out.write("            </div>\n");
      out.write("        </div>\n");
      out.write("    </div>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
